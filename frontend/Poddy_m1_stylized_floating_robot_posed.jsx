/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public\models\poddy_m1_stylized_floating_robot_posed.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/poddy_m1_stylized_floating_robot_posed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="180829753ca6423c8c1da30a00318372fbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Poddy_Geo01">
                  <group name="body01" />
                  <group name="details01" />
                  <group name="screen01" />
                  <group name="lights01" />
                </group>
                <group name="Master_ctrl01">
                  <group name="root_g_ctrl_a01">
                    <group name="root_ctrl_a01">
                      <group name="root_g_ctrl_b01">
                        <group name="root_ctrl_b01" position={[0, 21, 0]}>
                          <group name="head_g_ctrl01" position={[0, -21, 0]}>
                            <group name="head_ctrl01" position={[0, 26.049, 0]}>
                              <group name="eye_l_g_ctrl01" position={[0, -26.049, 0]}>
                                <group name="eye_l_ctrl01" position={[3.229, 35.986, 6.266]} />
                              </group>
                              <group name="eye_r_g_ctrl01" position={[0, -26.049, 0]}>
                                <group name="eye_r_ctrl01" position={[-3.229, 35.986, 6.266]} />
                              </group>
                              <group name="antenna_l_g_ctrl01" position={[0, -26.049, 0]}>
                                <group name="antenna_l_ctrl01" position={[9.125, 34.916, -1.479]} />
                              </group>
                              <group name="antenna_r_g_ctrl01" position={[0, -26.049, 0]}>
                                <group name="antenna_r_ctrl01" position={[-9.125, 34.916, -1.479]} />
                              </group>
                            </group>
                          </group>
                          <group name="arm_l_g_ctrl01" position={[0, -21, 0]}>
                            <group name="arm_l_ctrl01" position={[8.357, 21.596, 0]} />
                          </group>
                          <group name="arm_r_g_ctrl01" position={[0, -21, 0]}>
                            <group name="arm_r_ctrl01" position={[-8.357, 21.596, 0]} />
                          </group>
                        </group>
                      </group>
                    </group>
                  </group>
                  <group name="joints01">
                    <group name="Object_29">
                      <group name="root_a01_00" rotation={[0, 0, Math.PI / 2]}>
                        <primitive object={nodes.root_b01_01} />
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
          <skinnedMesh name="Object_30" geometry={nodes.Object_30.geometry} material={materials.body} skeleton={nodes.Object_30.skeleton} />
          <skinnedMesh name="Object_31" geometry={nodes.Object_31.geometry} material={materials.body} skeleton={nodes.Object_31.skeleton} />
          <skinnedMesh name="Object_32" geometry={nodes.Object_32.geometry} material={materials.screen} skeleton={nodes.Object_32.skeleton} />
          <skinnedMesh name="Object_33" geometry={nodes.Object_33.geometry} material={materials.body} skeleton={nodes.Object_33.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/poddy_m1_stylized_floating_robot_posed.glb')
